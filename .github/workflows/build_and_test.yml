name: Run test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PORT: 3000
  BASE_URL: http://localhost
  GH_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
  GH_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_DATABASE: ${{ secrets.DB_DATABASE }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  POSTGRES_USER: ${{ secrets.DB_USER }}
  POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
  POSTGRES_DB: ${{ secrets.DB_DATABASE }}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    strategy:
      matrix:
        node-version: [12.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          yarn --frozen-lockfile --production=false
      - name: Set up docker-compose
        run: |
          USER_ID=$(id -u) GROUP_ID=$(id -g) docker-compose up -d
      - name: Run test
        run: |
          docker-compose exec -T web yarn test
